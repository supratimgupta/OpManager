<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdmissionDate" xml:space="preserve">
    <value>Admission Date</value>
  </data>
  <data name="AltContactNo" xml:space="preserve">
    <value>Alternate Contact Number</value>
  </data>
  <data name="AnyAlumuniMember" xml:space="preserve">
    <value>Any Alumuni Member</value>
  </data>
  <data name="BloodGrp" xml:space="preserve">
    <value>Blood Group</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Standard Section</value>
  </data>
  <data name="ClassType" xml:space="preserve">
    <value>Class Type</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="ContactNo" xml:space="preserve">
    <value>Contact Number</value>
  </data>
  <data name="DateOfBirth" xml:space="preserve">
    <value>Date Of Birth</value>
  </data>
  <data name="DateOfJoining" xml:space="preserve">
    <value>Date Of Joining</value>
  </data>
  <data name="DepartmentId" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="DesignationId" xml:space="preserve">
    <value>Designation</value>
  </data>
  <data name="EducationQualification" xml:space="preserve">
    <value>Education Qualification</value>
  </data>
  <data name="EmailId" xml:space="preserve">
    <value>EmailId</value>
  </data>
  <data name="FatherAnnualIncome" xml:space="preserve">
    <value>Father's Annual Income</value>
  </data>
  <data name="FatherName" xml:space="preserve">
    <value>Father's Name</value>
  </data>
  <data name="FatherOccupation" xml:space="preserve">
    <value>Father's Occupation</value>
  </data>
  <data name="FatherOrganisationName" xml:space="preserve">
    <value>Father's Organisation Name</value>
  </data>
  <data name="FatherQualification" xml:space="preserve">
    <value>Father's Qualification</value>
  </data>
  <data name="FeesPaidForPvtTution" xml:space="preserve">
    <value>Fees Paid For Pvt Tution</value>
  </data>
  <data name="FName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="GuardianContactNo" xml:space="preserve">
    <value>Guardian Contact No</value>
  </data>
  <data name="GuardianEmailId" xml:space="preserve">
    <value>Guardian Email Id</value>
  </data>
  <data name="GuardianName" xml:space="preserve">
    <value>Gurdian Name</value>
  </data>
  <data name="HouseName" xml:space="preserve">
    <value>House Name</value>
  </data>
  <data name="IsChristian" xml:space="preserve">
    <value>Is Christian</value>
  </data>
  <data name="IsJointOrNuclearFamily" xml:space="preserve">
    <value>Is Joint Or Nuclear Family</value>
  </data>
  <data name="IsParentFromEngMedium" xml:space="preserve">
    <value>Is Parent From English Medium</value>
  </data>
  <data name="IsParentTeacher" xml:space="preserve">
    <value>Is Parent Teacher</value>
  </data>
  <data name="LName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="MName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="MotherAnnualInccome" xml:space="preserve">
    <value>Mother's Annual Income</value>
  </data>
  <data name="MotherName" xml:space="preserve">
    <value>Mother's Name</value>
  </data>
  <data name="MotherOccupation" xml:space="preserve">
    <value>Mother's Occupation</value>
  </data>
  <data name="MotherOrganisationName" xml:space="preserve">
    <value>Mother's Organisation Name</value>
  </data>
  <data name="MotherQualification" xml:space="preserve">
    <value>Mother's Qualification</value>
  </data>
  <data name="MotherToungue" xml:space="preserve">
    <value>Mother Toungue</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoOfTution" xml:space="preserve">
    <value>No Of Tution</value>
  </data>
  <data name="PageHeader" xml:space="preserve">
    <value>Register a User</value>
  </data>
  <data name="PageHeaderStudent" xml:space="preserve">
    <value>Register a Student</value>
  </data>
  <data name="ParmanentAddress" xml:space="preserve">
    <value>Parmanent Address</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="RegistrationNo" xml:space="preserve">
    <value>Registration No</value>
  </data>
  <data name="Religion" xml:space="preserve">
    <value>Religion</value>
  </data>
  <data name="ResidentialAddress" xml:space="preserve">
    <value>Residential Address</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="RollNo" xml:space="preserve">
    <value>Roll No</value>
  </data>
  <data name="SearchButton" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchPageHeader" xml:space="preserve">
    <value>Search Users</value>
  </data>
  <data name="SearchPageTitle" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Section" xml:space="preserve">
    <value>Section</value>
  </data>
  <data name="SiblingInStdOrNot" xml:space="preserve">
    <value>Siblings in Std Or Not</value>
  </data>
  <data name="StaffEmployeeId" xml:space="preserve">
    <value>Employee Id</value>
  </data>
  <data name="Standard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="StuPrivateTution" xml:space="preserve">
    <value>Student in Private Tution</value>
  </data>
  <data name="SubjectTheyTeach" xml:space="preserve">
    <value>SubjectTheyTeach</value>
  </data>
  <data name="UploadImage" xml:space="preserve">
    <value>Upload Image</value>
  </data>
  <data name="UserActions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value> UserName</value>
  </data>
  <data name="UserTableName" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="FatherDesignation" xml:space="preserve">
    <value>Father's Designation</value>
  </data>
  <data name="FatherContactNo" xml:space="preserve">
    <value>Father's Contact No</value>
  </data>
  <data name="FatherEmailId" xml:space="preserve">
    <value>Father's Email Id</value>
  </data>
  <data name="AddButton" xml:space="preserve">
    <value>Add Staff</value>
  </data>
  <data name="AddCommand" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="SubjectType" xml:space="preserve">
    <value>Select Specilization</value>
  </data>
  <data name="UpdateRegisterButton" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="AnyBrotherSisterinSchool" xml:space="preserve">
    <value>Any Brother Or Siter In School</value>
  </data>
  <data name="AnySeriousAilment" xml:space="preserve">
    <value>Any Serious Ailments</value>
  </data>
  <data name="Caste" xml:space="preserve">
    <value>Caste</value>
  </data>
  <data name="DropPoint" xml:space="preserve">
    <value>Drop Point</value>
  </data>
  <data name="FatherDepartment" xml:space="preserve">
    <value>Father's Department</value>
  </data>
  <data name="FatherOfficeAddress" xml:space="preserve">
    <value>Father's Office Address</value>
  </data>
  <data name="FatherOfficePhNo" xml:space="preserve">
    <value>Father's Office Phone No</value>
  </data>
  <data name="FatherTypeOfBusiness" xml:space="preserve">
    <value>Father's Type Of Business</value>
  </data>
  <data name="LikeToPartinCCA" xml:space="preserve">
    <value>Like To Participate in CCA</value>
  </data>
  <data name="LikeToPartInGames" xml:space="preserve">
    <value>Like To Participate in Games</value>
  </data>
  <data name="ModeOfTransport" xml:space="preserve">
    <value>Mode Of Transport</value>
  </data>
  <data name="MotherDepartment" xml:space="preserve">
    <value>Mother's Department</value>
  </data>
  <data name="MotherDesignation" xml:space="preserve">
    <value>Mother's Designation</value>
  </data>
  <data name="MotherOfficeAddress" xml:space="preserve">
    <value>Mother's Office Address</value>
  </data>
  <data name="MotherOfficePhNo" xml:space="preserve">
    <value>Mother's Office Phone No</value>
  </data>
  <data name="MotherTypeOfBusiness" xml:space="preserve">
    <value>Mother's Type Of Business</value>
  </data>
  <data name="NoOfSiblings" xml:space="preserve">
    <value>No Of Siblings</value>
  </data>
  <data name="ParentSchoolClgName" xml:space="preserve">
    <value>Parent's School/Clg Name</value>
  </data>
  <data name="RelationWithChild2ndPerson" xml:space="preserve">
    <value>Relation With Child of Second Person</value>
  </data>
  <data name="RelationWithChild1stPerson" xml:space="preserve">
    <value>Relation With Child of First Person</value>
  </data>
  <data name="TransportContatNo" xml:space="preserve">
    <value>Transport Contact No</value>
  </data>
  <data name="TransportDetails" xml:space="preserve">
    <value>Transport Details</value>
  </data>
  <data name="NameOf1stPerson" xml:space="preserve">
    <value>Name Of First Person</value>
  </data>
  <data name="NameOf2ndPerson" xml:space="preserve">
    <value>Name Of Second Person</value>
  </data>
  <data name="TransportDropPoint" xml:space="preserve">
    <value>Drop Point</value>
  </data>
  <data name="BrotherSisterInSchool" xml:space="preserve">
    <value>Brother Sister In School</value>
  </data>
</root>