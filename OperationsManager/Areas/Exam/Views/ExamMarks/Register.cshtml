@using OpMgr.Resources.Exam
@using OperationsManager.ExtendedHtmlHelpers
@model OperationsManager.Areas.Exam.Models.ExamMarksVM

@{    
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section PageScripts{
    <script>
        $(document).ready(function () {

           
        });

        function getStudentDetails(txtReg) {
            var regNo = document.getElementById("txtRegNo").value;
            if (regNo.length > 0) {
                var student = new Object();
                student.RegistrationNumber = regNo;
                $.ajax({
                    type: 'POST',
                    url: 'GetStudentDetails',
                    dataType: "json",
                    data: student,
                    success: function (resultData) { getStudentDetails_callback(resultData); },
                    error: function (error) { }
                });
            }
        }

        function getStudentDetails_callback(result) {
            if (result.status) {
                var data = result.data;
                document.getElementById("txtRegNo").value = data.RegistrationNumber;
                document.getElementById("hfUserMasterId").value = data.UserDetails.UserMasterId;
                document.getElementById("hfStudentInfoId").value = data.StudentInfoId;
                $("#ddlTranMaster").removeAttr('disabled');
                $("#txtDueDate").removeAttr('disabled');
                $("#ddlLocation").removeAttr('disabled');

                if (data.StandardSectionMap && data.StandardSectionMap.StandardSectionId) {
                    document.getElementById("hfStandSecMap").value = data.StandardSectionMap.StandardSectionId;

                    var ddlStandSectionMap = document.getElementById("ddlStandSectionMap");

                    for (i = 0; i < ddlStandSectionMap.options.length; i++) {
                        if (ddlStandSectionMap.options[i].value == data.StandardSectionMap.StandardSectionId.toString()) {
                            ddlStandSectionMap.selectedIndex = i;
                            break;
                        }
                    }
                }
                else {
                    document.getElementById("ddlStandSectionMap").selectedIndex = 0;
                }
            }
            else {
                alert('Registration number is not valid');
                document.getElementById("txtRegNo").value = "";

                document.getElementById("hfUserMasterId").value = "";
                document.getElementById("hfStudentInfoId").value = "";

                $("#ddlLocation").attr('disabled', 'disabled');
                $("#btnSubmit").attr('disabled', 'disabled');

                document.getElementById("hfStandSecMap").value = "";
                document.getElementById("ddlStandSectionMap").selectedIndex = 0;
            }
        }
    </script>
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading"><b></b></div>
            <div class="panel-body">

                @using (Html.BeginForm("Register", "ExamMarks", FormMethod.Post, new { id = "registerform" }))
                {
                    @Html.AntiForgeryToken()
                    <fieldset>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.Student.RegistrationNumber, ExamMarks.RegistrationNo, new { @class = "form-control requiredField", onblur = "getStudentDetails(this);", data_rule_required = "true", data_msg_required = "Please enter registration no", id = "txtRegNo" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.Student.RollNumber, ExamMarks.RollNumber, new { @class = "form-control" })
                        </div>
                        <div class="col-lg-5" id="standardSectionDiv">
                            @Html.OpMgrDropDownListFor(m => m.StandardSectionList, Model.StandardSectionList, TransactionLogAdd.StandardSectionLabel, new { @class = "form-control", disabled = "disabled", id = "ddlStandSectionMap" })
                            @Html.HiddenFor(m => m.StandardSectionMap.StandardSectionId, new { id = "hfStandSecMap" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.ContactNo, UserResource.ContactNo, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Contact Number is required" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.AltContactNo, UserResource.AltContactNo, new { @class = "form-control" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.EmailId, UserResource.EmailId, new { @class = "form-control" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.DOB, UserResource.DateOfBirth, new { @class = "DOB-picker form-control", data_rule_required = "true", data_msg_required = "Date of Birth is required" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.BloodGroup, UserResource.BloodGrp, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Blood Group is required" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextAreaFor(m => m.ResidentialAddress, UserResource.ResidentialAddress, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Residential Address is required" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextAreaFor(m => m.PermanentAddress, UserResource.ParmanentAddress, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Permanent Address is required" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrDropDownListFor(m => m.Location.LocationId, Model.LocationList, UserResource.Location, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Location is required" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrDropDownListFor(m => m.Gender, Model.GenderList, UserResource.Gender, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Gender is required" })
                        </div>
                                              
                        <div class="col-lg-4">
                            <button type="submit" class="btn btn-primary">@UserResource.RegisterButton</button>
                        </div>
                    </fieldset>
                }
            </div>
        </div>
    </div>
</div>

