@using OpMgr.Resources.Exam
@using OperationsManager.ExtendedHtmlHelpers
@model OperationsManager.Areas.Exam.Models.ExamMarksVM

@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}

@section PageScripts{
    <script>
        $(document).ready(function () {

            $('.CourseFrom').datepicker({ dateFormat: 'dd-M-yy' });
            $('.CourseTo').datepicker({ dateFormat: 'dd-M-yy' });

        });
        function calcMarks(txtActualMarks, txtCalcMarksId) {
            var actualMarks = txtActualMarks.value;
            var assesmentMarks = document.getElementById("spnAssesmentMarks").innerHTML;
            var fullMarks = document.getElementById("spnFullMarks").innerHTML;
            var passMarks = document.getElementById("spnPassmarks").innerHTML;

            var calculatedMark = (parseFloat(actualMarks) / parseFloat(assesmentMarks)) * fullMarks;

            if (calculatedMark < passMarks) {
                alert('Marks is below passmarks.');
            }

            document.getElementById(txtCalcMarksId).value = calculatedMark;
        }
    </script>
    <script language="javascript" type="text/javascript">
        function openRuleWindow(id, mode) {
            window.open("/Exam/ExamRules/Rule?rowId=" + id + "&mode=" + mode, "ruleWindow", "width=400,height=400");
        }

        function changeMode(mode) {
            debugger;
            document.getElementById("hfMode").value = mode;
            if (mode === "SEARCH") {
                return validate('reqSearch');
            }
            if (mode === "SAVE") {
                return validate('reqSave');
            }

        }

        function validate(className) {
            debugger;
            var arrRequired = document.getElementsByClassName(className);
            var retValue = true;
            for (i = 0; i < arrRequired.length; i++) {
                if ($(arrRequired[i]).val().length === 0) {
                    retValue = false;
                    alert('Marked fields are mandatory.');
                    break;
                }
            }
            return retValue;
        }
    </script>
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-color panel-primary">
                <div class="panel-heading">
                    <b>@ExamMarks.StudentMarksMaeding</b>
                </div>
                <div class="panel-body">


                    @Html.AntiForgeryToken()
                    <fieldset>
                        <div class="col-lg-5">
                            @Html.OpMgrDropDownListFor(m => m.CourseExam.CourseMapping.Location.LocationId, Model.LocationList, ExamMarks.Location, new { @class = "form-control requiredField reqSearch" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrDropDownListFor(m => m.CourseExam.CourseMapping.StandardSection.StandardSectionId, Model.StandardSectionList, ExamMarks.StandardSectionId, new { @class = "form-control requiredField reqSearch" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrDropDownListFor(m => m.CourseExam.CourseMapping.Subject.SubjectId, Model.SubjectList, ExamMarks.Subject, new { @class = "form-control requiredField reqSearch" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrDropDownListFor(m => m.CourseExam.ExamType.ExamTypeId, Model.ExamTypeList, ExamMarks.ExamType, new { @class = "form-control requiredField reqSearch" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrDropDownListFor(m => m.CourseExam.ExamSubType.ExamSubTypeId, Model.ExamSubTypeList, ExamMarks.ExamSubType, new { @class = "form-control requiredField reqSearch" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.FromDateString, ExamMarks.CourseFrom, new { @class = "CourseFrom form-control requiredField reqSearch", data_rule_required = "true", data_msg_required = "Course Start Date is Required" })
                        </div>
                        <div class="col-lg-5">
                            @Html.OpMgrTextBoxFor(m => m.ToDateString, ExamMarks.CourseTo, new { @class = "CourseTo form-control requiredField reqSearch", data_rule_required = "true", data_msg_required = "Course End Date is Required" })
                            <input type="hidden" value="@Model.CourseExamId" name="CourseExamId" />
                            <input type="hidden" value="@Model.RuleId" name="RuleId" />
                            @Html.HiddenFor(m => m.Mode, new { id = "hfMode" })
                        </div>

                        <div class="col-lg-4" style="padding-top:27px;">
                            <button type="submit" class="btn btn-primary" onclick="return changeMode('SEARCH');" id="btnSearch">@ExamMarks.Submit</button>
                        </div>
                    </fieldset>
                </div>
            </div>
            @if (Model.IsRuleNeededToBeAdded)
            {
                <div class="panel panel-color panel-primary">
                    <div class="panel-heading">You need to add rule first. Please <a onclick="openRuleWindow(@Model.CourseExam.CourseExamId, 'ADD');" style="cursor:pointer;"> + add</a> rules. </div>
                </div>
            }
            else if (Model.Rule != null)
            {
                <div class="panel panel-color panel-primary">
                    <div class="panel-heading">Following rule is your active rule</div>
                    <div class="panel-body">
                        <table class="table table table-striped table-bordered table-responsive table-hover" border="1">
                            <thead>
                                <tr>
                                    <th>Assesment marks</th>
                                    <th>Actual marks</th>
                                    <th>Pass marks</th>
                                    <td></td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><span id="spnAssesmentMarks">@Model.Rule.AssesmentMarks</span></td>
                                    <td><span id="spnFullMarks">@Model.Rule.ActualFullMarks</span></td>
                                    <td><span id="spnPassmarks">@Model.Rule.PassMarks</span></td>
                                    <td>
                                        @if (Model.ExamMarksList != null && Model.ExamMarksList.Count > 0)
                                        {
                                            if (Model.ExamMarksList.FirstOrDefault(em => em.ExamMarksId > 0) == null)
                                            {
                                                <a onclick="openRuleWindow(@Model.Rule.ExamRuleId, 'EDIT');">Edit</a>
                                            }
                                            else
                                            {
                                                <span style="cursor:text;" title="Can't edit rule now.'">Edit</span>
                                            }
                                        }
                                        else
                                        {
                                            <a onclick="openRuleWindow(@Model.Rule.ExamRuleId, 'EDIT');">Edit</a>
                                        }
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            <div class="panel panel-color panel-primary">
                <div class="panel-heading">

                    <b>Exam Marks Details</b>

                </div>
                <div class="panel-body">

                    @if (!Model.IsRuleOk)
                    {
                        <span class="danger" style="color:red">@Model.RuleAdditionMessage</span>
                    }
                    else
                    {

                        <div style="overflow:scroll;">
                            <div class="col-lg-12">
                                <div class="col-lg-4">
                                </div>
                                <div class="col-lg-4">
                                </div>
                                <div class="col-lg-4">
                                    <button type="submit" id="btnsavemarks" class="btn btn-primary" onclick="return changeMode('SAVE');">@ExamMarks.Submitmarks</button>
                                </div>
                            </div>
                            <div class="col-lg-12" style="padding-top:20px;">
                                <table id="tablePayment" class="table table table-striped table-bordered table-responsive table-hover " border="1" data-toggle="table" data-url="tables/data1.json" data-show-refresh="true" data-show-toggle="true" data-show-columns="true" data-search="true" data-select-item-name="toolbar1" data-pagination="true" data-sort-name="name" data-sort-order="desc">
                                    <thead>
                                        <tr>
                                            <th th data-field="name" data-sortable="true">
                                                @ExamMarks.StudentName
                                            </th>
                                            <th h data-field="Location" data-sortable="true">
                                                @ExamMarks.Location
                                            </th>
                                            <th h data-field="RegistrationNo" data-sortable="true">
                                                @ExamMarks.RegistrationNo
                                            </th>
                                            <th th data-field="RollNumber" data-sortable="true">
                                                @ExamMarks.RollNumber
                                            </th>
                                            <th th data-field="StandardSectionId" data-sortable="true">
                                                @ExamMarks.StandardSectionId
                                            </th>
                                            <th th data-field="Obtainedmarks" data-sortable="true">
                                                @ExamMarks.ObtainedMarks
                                            </th>
                                            <th th data-field="Calculatedmarks" data-sortable="true">
                                                @ExamMarks.CalculatedMarks
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null)
                                        {
                                            if (Model.IsSearchSuccessful)
                                            {
                                                for (int i = 0; i < Model.ExamMarksList.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Model.ExamMarksList[i].FullName
                                                            @Html.HiddenFor(m => m.ExamMarksList[i].ExamMarksId)
                                                        </td>
                                                        <td>
                                                            @Model.ExamMarksList[i].Student.UserDetails.Location.LocationDescription
                                                        </td>
                                                        <td>
                                                            @Model.ExamMarksList[i].Student.RegistrationNumber
                                                            @Html.HiddenFor(m => m.ExamMarksList[i].Student.StudentInfoId)
                                                        </td>
                                                        <td>
                                                            @Model.ExamMarksList[i].Student.RollNumber
                                                        </td>
                                                        <td>
                                                            @Model.ExamMarksList[i].Class
                                                        </td>
                                                        <td>
                                                            @Html.OpMgrTextBoxFor(m => m.ExamMarksList[i].MarksObtained, "", new { @class = "form-control requiredField reqSave", onchange = "calcMarks(this,'txtActualMarks_" + i + "');" })
                                                        </td>
                                                        <td>
                                                            @Html.OpMgrTextBoxFor(m => m.ExamMarksList[i].CalculatedMarks, "", new { @class = "form-control requiredField reqSave", id = "txtActualMarks_" + i })
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="7">
                                                    No Records Found
                                                </td>
                                            </tr>
                                        }
                                    </tbody>

                                </table>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>

    </div>
}
 

