@using OpMgr.Resources.User
@using OperationsManager.ExtendedHtmlHelpers
@model OperationsManager.Areas.Login.Models.UserViewModel


@{

    Layout = "~/Views/Shared/_NewLayout.cshtml";
}
@section PageScripts{
    <script>
        $(document).ready(function () {

            $.validator.addMethod("aFunction",
                function (value, element) {
                    debugger;
                    if (value == "-1" || value=="" || !value)
                        return false;
                    else
                        return true;
                },
                "Please select a value");

            var loginForm = $("#registerform");
            $("#registerform").validate({
                rules: {
                    "Location.LocationId" : {
                        aFunction: true
                    },
                    Gender: {
                        aFunction: true
                    },
                    "Employee.Designation.DesignationId": {
                        aFunction: true
                    },
                    "Employee.Department.DepartmentId": {
                        aFunction: true
                    }
                },
                messages: {
                    "Location.LocationId": 'Please select a location',
                    Gender: 'Please select gender',
                    "Employee.Designation.DesignationId": 'Please select designation',
                    "Employee.Department.DepartmentId": 'Please select department'
                }
            });            

            //$('.admissiondate').datepicker({ dateFormat: 'dd-M-yy' });
            $('.DOB-picker').datepicker({ dateFormat: 'dd-M-yy' });
            $('.dateofjoining').datepicker({ dateFormat: 'dd-M-yy' });

            // If Department = Teaching THEN ClassType will display, If classtype is MEDIUM or SENIOR then Subject/Specialization will appear
            var deptId = $("#Employee_Department_DepartmentId").val();
            if (deptId == 1) {
                $("#divClasstype").show();

                var classTypeId = $("#Employee_ClassType_ClassTypeId").val();
                if (classTypeId > 2) {
                    $("#divSpecilizaion").show();
                }
                else {
                    $("#divSpecilizaion").hide();
                }
            }
            else {
                $("#divClasstype").hide();
                $("#divSpecilizaion").hide();
            }

            // If Selected Department = Teaching THEN ClassType will display, If classtype is MEDIUM or SENIOR then Subject/Specialization will appear
            $("#Employee_Department_DepartmentId").change(function () {
                var deptId = $("#Employee_Department_DepartmentId").val();

                if (deptId == 1) {
                    $("#divClasstype").show();

                    $("#Employee_ClassType_ClassTypeId").change(function () {
                        var classTypeId = $("#Employee_ClassType_ClassTypeId").val();
                        if (classTypeId > 2) {
                            $("#divSpecilizaion").show();
                        }
                        else {
                            $("#divSpecilizaion").hide();
                        }
                    });
                }
                else {
                    $("#divClasstype").hide();
                    $("#divSpecilizaion").hide();
                }
                return false;
            });

            //If classtype is MEDIUM or SENIOR then Subject/Specialization will appear
            $("#Employee_ClassType_ClassTypeId").change(function () {
                var classTypeId = $("#Employee_ClassType_ClassTypeId").val();
                if (classTypeId > 2) {
                    $("#divSpecilizaion").show();
                }
                else {
                    $("#divSpecilizaion").hide();
                }
            });

        });

        //Start-- To Assign Multiple Role -- code start from here
        function assignRoles() {
            var table = document.getElementById("tblRoles");
            var tbody = table.getElementsByTagName("tbody")[0];
            var nextRowId = tbody.getElementsByTagName("tr").length;
            var newRow = document.createElement("tr");

            var firstCell = document.createElement("td");
            var hiddenInput = document.createElement("input");
            hiddenInput.type = "hidden";
            hiddenInput.name = "UserEntitlementList[" + nextRowId + "].RowId";
            hiddenInput.value = "-1";
            firstCell.style.display = "none";
            firstCell.appendChild(hiddenInput);

            var scndCell = document.createElement("td");
            var ddlTrUserEntitle = document.createElement("select");
            ddlTrUserEntitle.name = "UserEntitlementList[" + nextRowId + "].RoleDetails.UserRoleId";
            ddlTrUserEntitle.className = "form-control";
            populateTrUserEntDDL(ddlTrUserEntitle);
            scndCell.appendChild(ddlTrUserEntitle);

            var thirdCell = document.createElement("td");
            var aDelete = document.createElement("a");
            aDelete.innerHTML = "Delete";
            aDelete.style.cursor = "pointer";
            $(aDelete).attr('onclick', 'deleteRow(this);');
            thirdCell.appendChild(aDelete);

            newRow.appendChild(firstCell);
            newRow.appendChild(scndCell);
            newRow.appendChild(thirdCell);

            tbody.appendChild(newRow);

            return false;
        }

        function deleteRow(aDelete) {
            var row = aDelete.parentNode.parentNode;
            var table = document.getElementById("tblRoles");
            var tbody = table.getElementsByTagName("tbody")[0];
            tbody.removeChild(row);
        }

        function populateTrUserEntDDL(ddlTrUserEntitle) {
            $.ajax({
                type: 'POST',
                url: 'GetUserEntitlementDDL',
                dataType: "json",
                success: function (resultData) { populateTrUserEntityDDL(resultData, ddlTrUserEntitle); },
                error: function (error) { }
            });
        }

        function populateTrUserEntityDDL(trnsUserEnt, ddlTrUserEntitle) {

            var ddlTrUserEntitles = ddlTrUserEntitle;
            ddlTrUserEntitles.innerHTML = "";
            for (i = -1; i < trnsUserEnt.length; i++) {
                var option = document.createElement("option");
                if (i == -1) {
                    option.value = "-1";
                    option.innerHTML = "";
                }
                else {
                    option.value = trnsUserEnt[i].UserRoleId;
                    option.innerHTML = trnsUserEnt[i].RoleName;
                }
                ddlTrUserEntitles.appendChild(option);
            }
        }

        function deleteUserEntitleMent(uEntId) {
            var uEnts = new Object();
            uEnts.RowId = parseInt(uEntId);
            $.ajax({
                type: 'POST',
                url: 'DeleteUserEntitlement',
                data: uEnts,
                dataType: "json",
                success: function (resultData) { window.location.reload(); },
                error: function (error) { }
            });
        }

        //End -- Assign Multiple role

        //Start -- Assign Multiple Specilization/subject to a faculty

        function assignSpecialzation() {

            var table = document.getElementById("tblSubject");
            var tbody = table.getElementsByTagName("tbody")[0];
            var nextRowId = tbody.getElementsByTagName("tr").length;
            var newRow = document.createElement("tr");

            var firstCell = document.createElement("td");
            var hiddenInput = document.createElement("input");
            hiddenInput.type = "hidden";
            hiddenInput.name = "FacultyCourseList[" + nextRowId + "].FacultyCourseMapId";
            hiddenInput.value = "-1";
            firstCell.style.display = "none";
            firstCell.appendChild(hiddenInput);

            var scndCell = document.createElement("td");
            var ddlFacultyCourse = document.createElement("select");
            ddlFacultyCourse.name = "FacultyCourseList[" + nextRowId + "].Subject.SubjectId";
            ddlFacultyCourse.className = "form-control";
            populateSubject(ddlFacultyCourse);
            scndCell.appendChild(ddlFacultyCourse);

            var thirdCell = document.createElement("td");
            var aDelete = document.createElement("a");
            aDelete.innerHTML = "Delete";
            aDelete.style.cursor = "pointer";
            $(aDelete).attr('onclick', 'deleteSubjectRow(this);');
            thirdCell.appendChild(aDelete);

            newRow.appendChild(firstCell);
            newRow.appendChild(scndCell);
            newRow.appendChild(thirdCell);

            tbody.appendChild(newRow);

            return false;
        }

        function deleteSubjectRow(aDelete) {
            var row = aDelete.parentNode.parentNode;
            var table = document.getElementById("tblSubject");
            var tbody = table.getElementsByTagName("tbody")[0];
            tbody.removeChild(row);
        }

        function populateSubject(ddlFacultyCourse) {
            $.ajax({
                type: 'POST',
                url: 'GetSubjectDDL',
                dataType: "json",
                success: function (resultData) { populateTrSubjectDDL(resultData, ddlFacultyCourse); },
                error: function (error) { }
            });
        }

        function populateTrSubjectDDL(facultyCoursedata, ddlFacultyCourse) {

            var ddlFacultyCourses = ddlFacultyCourse;
            ddlFacultyCourses.innerHTML = "";
            for (i = -1; i < facultyCoursedata.length; i++) {
                var option = document.createElement("option");
                if (i == -1) {
                    option.value = "-1";
                    option.innerHTML = "";
                }
                else {
                    option.value = facultyCoursedata[i].SubjectId;
                    option.innerHTML = facultyCoursedata[i].SubjectName;
                }
                ddlFacultyCourses.appendChild(option);
            }
        }

        function deleteFacultyCourseMap(uFacultyCourseId) {
            var facultyCourse = new Object();
            facultyCourse.FacultyCourseMapId = parseInt(uFacultyCourseId);
            $.ajax({
                type: 'POST',
                url: 'DeleteFacultyCourseMap',
                data: facultyCourse,
                dataType: "json",
                success: function (resultData) { window.location.reload(); },
                error: function (error) { }
            });
        }

        function generateEmplId()
        {
            if (document.getElementById("txtFName").value.length == 0 || document.getElementById("txtLName").value.length == 0)
            {
                alert('Please enter first name and last name to generate employee id');
            }
            $.ajax({
                type: 'POST',
                url: 'GenerateEmployeeId',
                data: {fName: document.getElementById("txtFName").value, lName: document.getElementById("txtLName").value},
                dataType: "json",
                success: function (resultData) { document.getElementById("txtEmployeeId").value = resultData.data; document.getElementById("hfStaffEmployeeId").value = resultData.data; },
                error: function (error) { }
            });
        }
        //End -- Assign Multiple Specilization/ Subject to a faculty
    </script>
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-color panel-primary">
            <div class="panel-heading"><b>@UserResource.PageHeader</b></div>
            <div class="panel-body">

                @using (Html.BeginForm("Register", "Login", FormMethod.Post, new { id = "registerform", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row" style="padding-bottom:5px">
                        <i class="ion-ios7-arrow-back" style="padding-right:5px"></i>@Html.ActionLink("Back", "Search", "User", new { Area = "User" }, null)
                    </div>
                    <div>
                        <fieldset class="@Model.DisabledClass">

                            @if (string.Equals(Model.MODE, "EDIT") || string.Equals(Model.MODE, "VIEW"))
                            {
                                <div class="row">
                                    <div class="col-lg-5">
                                        <img src="@Model.employeeimagepath" alt="No image found" height="249" width="177" class="image-viewer" />
                                    </div>
                                </div>
                            }

                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.FName, UserResource.FName, new { @class = "form-control", data_rule_required = "true", data_msg_required = "First Name is required", id="txtFName" })
                                @Html.HiddenFor(m => m.MODE)
                                @Html.HiddenFor(m => m.UserMasterId)
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.MName, UserResource.MName, new { @class = "form-control" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.LName, UserResource.LName, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Last Name is required", id="txtLName" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.ContactNo, UserResource.ContactNo, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Contact Number is required" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.AltContactNo, UserResource.AltContactNo, new { @class = "form-control" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.EmailId, UserResource.EmailId, new { @class = "form-control" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.DOBString, UserResource.DateOfBirth, new { @class = "DOB-picker form-control", data_rule_required = "true", data_msg_required = "Date of Birth is required" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.BloodGroup, UserResource.BloodGrp, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Blood Group is required" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextAreaFor(m => m.ResidentialAddress, UserResource.ResidentialAddress, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Residential Address is required" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextAreaFor(m => m.PermanentAddress, UserResource.ParmanentAddress, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Permanent Address is required" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrDropDownListFor(m => m.Location.LocationId, Model.LocationList, UserResource.Location, new { @class = "form-control", id="ddlLocation" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrDropDownListFor(m => m.Gender, Model.GenderList, UserResource.Gender, new { @class = "form-control", id = "ddlGender" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.DOJString, UserResource.DateOfJoining, new { @class = "dateofjoining form-control", data_rule_required = "true", data_msg_required = "Date of joining is required" })
                            </div>
                            <div class="col-lg-5">
                                @Html.HiddenFor(m => m.hdnEmployeeId)
                                @Html.HiddenFor(m => m.Employee.StaffEmployeeId, new { id = "hfStaffEmployeeId" })
                                @*@Html.OpMgrTextBoxFor(m => m.Employee.StaffEmployeeId, UserResource.StaffEmployeeId, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Staff EmployeeId is required" })*@
                                @if(Model.MODE=="EDIT" || Model.MODE=="ADD")
                                {
                                    @Html.OpMgrTextBoxFor(m => m.DummyStaffEmployeeId, UserResource.StaffEmployeeId, new { @class = "form-control", disabled="disabled" })
                                }
                                else
                                {
                                    @Html.OpMgrTextBoxForWithButton(m => m.DummyStaffEmployeeId, UserResource.StaffEmployeeId, "fa fa-search", "srchEmployeeId", "generateEmplId();", new { @class = "form-control", data_rule_required = "true", data_msg_required = "Staff EmployeeId is required", disabled = "disabled", id = "txtEmployeeId" })
                                }                                
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrTextBoxFor(m => m.Employee.EducationalQualification, UserResource.EducationQualification, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Education Qualificattion is required" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrDropDownListFor(m => m.Employee.Designation.DesignationId, Model.DesignationList, UserResource.DesignationId, new { @class = "form-control", id="ddlDesignation" })
                            </div>
                            <div class="col-lg-5">
                                @Html.OpMgrDropDownListFor(m => m.Employee.Department.DepartmentId, Model.DepartmentList, UserResource.DepartmentId, new { @class = "form-control", id="ddlDepartment" })
                            </div>
                            <div class="col-lg-5" id="divClasstype">
                                @Html.OpMgrDropDownListFor(m => m.Employee.ClassType.ClassTypeId, Model.ClassTypeList, UserResource.ClassType, new { @class = "form-control" })
                            </div>

                            @*<div class="col-lg-5" id="divSpecilizaion">
                                    @Html.OpMgrDropDownListFor(m => m.Employee.Subject.SubjectId, Model.SubjectList, UserResource.SubjectType, new { @class = "form-control" })
                                </div>*@
                            <div class="row" id="divSpecilizaion">
                                <table id="tblSubject" class="table table table-striped table-bordered table-responsive table-hover">
                                    <thead>
                                        <tr>
                                            <th colspan="5">
                                                Add Specialization
                                            </th>
                                        </tr>
                                        @if (!string.Equals(Model.MODE, "VIEW", StringComparison.OrdinalIgnoreCase))
                                        {
                                            <tr>
                                                <th colspan="5">
                                                    <input type="button" class="btn btn-primary" style="width:70px" onclick="assignSpecialzation();" value="+Add" />
                                                </th>
                                            </tr>
                                        }
                                        <tr>
                                            <th style="display:none;"></th>
                                            <th>Specializations</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.FacultyCourseList != null && Model.FacultyCourseList.Count > 0)
                                        {
                                            for (int i = 0; i < Model.FacultyCourseList.Count; i++)
                                            {
                                                <tr>
                                                    <td style="display:none;">
                                                        <input type="hidden" name="FacultyCourseList[@i].FacultyCourseMapId" value="@Model.FacultyCourseList[i].FacultyCourseMapId" />
                                                    </td>
                                                    <td>
                                                        <select name="FacultyCourseList[@i].Subject.SubjectId" class="form-control">
                                                            @foreach (OpMgr.Common.DTOs.SubjectDTO trSub in Model.Subject)
                                                            {
                                                                <option value="@trSub.SubjectId" @(Model.FacultyCourseList[i].Subject.SubjectId == trSub.SubjectId ? "selected=\"selected\"" : "")>@trSub.SubjectName</option>
                                                            }
                                                        </select>
                                                    </td>
                                                    <td>
                                                        @if (!string.Equals(Model.MODE, "VIEW", StringComparison.OrdinalIgnoreCase))
                                                        {
                                                            <a onclick="deleteFacultyCourseMap('@Model.FacultyCourseList[i].FacultyCourseMapId');" style="cursor:pointer;">Delete</a>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="row">
                                <table id="tblRoles" class="table table table-striped table-bordered table-responsive table-hover">
                                    <thead>
                                        <tr>
                                            <th colspan="5">
                                                Assign Role
                                            </th>
                                        </tr>
                                        @if (!string.Equals(Model.MODE, "VIEW", StringComparison.OrdinalIgnoreCase))
                                        {
                                            <tr>
                                                <th colspan="5">
                                                    <input type="button" class="btn btn-primary" style="width:70px" onclick="assignRoles();" value="+Add" />
                                                </th>
                                            </tr>
                                        }
                                        <tr>
                                            <th style="display:none;"></th>
                                            <th>Roles</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.UserEntitlementList != null && Model.UserEntitlementList.Count > 0)
                                        {
                                            for (int i = 0; i < Model.UserEntitlementList.Count; i++)
                                            {
                                                <tr>
                                                    <td style="display:none;">
                                                        <input type="hidden" name="UserEntitlementList[@i].RowId" value="@Model.UserEntitlementList[i].RowId" />
                                                    </td>
                                                    <td>
                                                        <select name="UserEntitlementList[@i].RoleDetails.UserRoleId" class="form-control">
                                                            @foreach (OpMgr.Common.DTOs.EntitlementDTO trUEnt in Model.SelectUserEntitlement)
                                                            {
                                                                <option value="@trUEnt.UserRoleId" @(Model.UserEntitlementList[i].RoleDetails.UserRoleId == trUEnt.UserRoleId ? "selected=\"selected\"" : "")>@trUEnt.RoleName</option>
                                                            }
                                                        </select>
                                                    </td>
                                                    <td>
                                                        @if (!string.Equals(Model.MODE, "VIEW", StringComparison.OrdinalIgnoreCase))
                                                        {
                                                            <a onclick="deleteUserEntitleMent('@Model.UserEntitlementList[i].RowId');" style="cursor:pointer;">Delete</a>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>

                                </table>

                            </div>
                            <div class="row">
                                <div class="col-lg-5">
                                    <div class="form-group">
                                        <label for="fatherImage">Upload Image of Employee (Old will be replaced)</label>
                                        <input type="file" name="fuEmployeeImage" class="form-control" id="employeeImage" />
                                    </div>
                                </div>
                            </div>
                            @if (!string.Equals(Model.MODE, "EDIT", StringComparison.OrdinalIgnoreCase) && !string.Equals(Model.MODE, "VIEW", StringComparison.OrdinalIgnoreCase))
                            {
                                <div id="divcredentials">
                                    <div class="col-lg-10">
                                        @Html.OpMgrTextBoxFor(m => m.UserName, UserResource.UserName, new { @class = "form-control", data_rule_required = "true", data_msg_required = "UserName is required" })
                                    </div>
                                    <div class="col-lg-10">
                                        @Html.OpMgrPasswordFor(m => m.Password, UserResource.Password, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Password is required" })
                                    </div>
                                    <div class="col-lg-10">
                                        @Html.OpMgrPasswordFor(m => m.ConfirmPassword, UserResource.ConfirmPassword, new { @class = "form-control", data_rule_required = "true", data_msg_required = "Confim Password is required" })
                                    </div>
                                </div>
                            }
                            @if (string.Equals(Model.MODE, "VIEW", StringComparison.OrdinalIgnoreCase))
                            {

                            }
                            else if (string.Equals(Model.MODE, "EDIT", StringComparison.OrdinalIgnoreCase))
                            {
                                <div class="col-lg-4">
                                    <button type="submit" class="btn btn-primary">@UserResource.UpdateRegisterButton</button>
                                </div>
                            }
                            else
                            {
                                <div class="col-lg-4">
                                    <button type="submit" class="btn btn-primary">@UserResource.RegisterButton</button>
                                </div>
                            }

                        </fieldset>
                    </div>
                }
            </div>
        </div>
    </div><!-- /.col-->
</div>
