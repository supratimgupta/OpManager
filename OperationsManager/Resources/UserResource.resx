<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdmissionDate" xml:space="preserve">
    <value>Admission Date</value>
    <comment>Admission Date of a Student</comment>
  </data>
  <data name="AltContactNo" xml:space="preserve">
    <value>Alternate Contact Number</value>
    <comment>Alternate Contact number of user</comment>
  </data>
  <data name="BloodGrp" xml:space="preserve">
    <value>Blood Group</value>
    <comment>Blood Group</comment>
  </data>
  <data name="Class" xml:space="preserve">
    <value>StandardSection</value>
    <comment>Class of Student</comment>
  </data>
  <data name="ClassType" xml:space="preserve">
    <value>Class Type</value>
    <comment>Class Type of Student</comment>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
    <comment>Confirm Your password</comment>
  </data>
  <data name="ContactNo" xml:space="preserve">
    <value>Contact Number</value>
    <comment>contact number of user</comment>
  </data>
  <data name="DateOfBirth" xml:space="preserve">
    <value>Date Of Birth</value>
    <comment>Date of Birth of User</comment>
  </data>
  <data name="DateOfJoining" xml:space="preserve">
    <value>Date Of Joining</value>
    <comment>Date Of Joining of Employee</comment>
  </data>
  <data name="DepartmentId" xml:space="preserve">
    <value>Department</value>
    <comment>Department  of Employee</comment>
  </data>
  <data name="DesignationId" xml:space="preserve">
    <value>Designation</value>
    <comment>Designation  of Employee</comment>
  </data>
  <data name="EducationQualification" xml:space="preserve">
    <value>Education Qualification</value>
    <comment>Education Qualification Of Employee</comment>
  </data>
  <data name="EmailId" xml:space="preserve">
    <value>EmailId</value>
    <comment>Emil Id of User</comment>
  </data>
  <data name="FName" xml:space="preserve">
    <value>First Name</value>
    <comment>User First Name</comment>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
    <comment>Gender of user</comment>
  </data>
  <data name="GuardianContactNo" xml:space="preserve">
    <value>Guardian Contact No</value>
    <comment>Contact Number of Guardian</comment>
  </data>
  <data name="GuardianEmailId" xml:space="preserve">
    <value>Guardian Email Id</value>
    <comment>Email Id of Guardian</comment>
  </data>
  <data name="GuardianName" xml:space="preserve">
    <value>Gurdian Name</value>
    <comment>Name of Guardian</comment>
  </data>
  <data name="HouseName" xml:space="preserve">
    <value>House Name</value>
    <comment>House Name of Student</comment>
  </data>
  <data name="LName" xml:space="preserve">
    <value>Last Name</value>
    <comment>User Last Name</comment>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
    <comment>user's Location</comment>
  </data>
  <data name="MName" xml:space="preserve">
    <value>Middle Name</value>
    <comment>User Middle Name</comment>
  </data>
  <data name="PageHeader" xml:space="preserve">
    <value>Register a User</value>
    <comment>register a user</comment>
  </data>
  <data name="ParmanentAddress" xml:space="preserve">
    <value>Parmanent Address</value>
    <comment>Parmanent Address of user</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
    <comment>Provide Password</comment>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>Register</value>
    <comment>Register Button</comment>
  </data>
  <data name="RegistrationNo" xml:space="preserve">
    <value>Registration No</value>
    <comment>Registration no of student</comment>
  </data>
  <data name="ResidentialAddress" xml:space="preserve">
    <value>Residential Address</value>
    <comment>Residential Address of user</comment>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
    <comment>Role of User</comment>
  </data>
  <data name="RollNo" xml:space="preserve">
    <value>Roll No</value>
    <comment>RollNo of student</comment>
  </data>
  <data name="Section" xml:space="preserve">
    <value>Section</value>
    <comment>Section of Student</comment>
  </data>
  <data name="StaffEmployeeId" xml:space="preserve">
    <value>Employee Id</value>
    <comment>Employee Id</comment>
  </data>
  <data name="Standard" xml:space="preserve">
    <value>Standard</value>
    <comment>Standard of Student</comment>
  </data>
  <data name="UploadImage" xml:space="preserve">
    <value>Upload Image</value>
    <comment>Image of User</comment>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>UserName</value>
    <comment>Username of User</comment>
  </data>
</root>